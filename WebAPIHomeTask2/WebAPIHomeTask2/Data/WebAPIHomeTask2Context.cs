// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using WebAPIHomeTask2.Models;

namespace WebAPIHomeTask2.Data
{
    public partial class WebAPIHomeTask2Context : DbContext
    {
        public WebAPIHomeTask2Context()
        {
        }

        public WebAPIHomeTask2Context(DbContextOptions<WebAPIHomeTask2Context> options)
            : base(options)
        {
        }

        public virtual DbSet<CoronaVaccine> CoronaVaccines { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<VaccineToEmployee> VaccineToEmployees { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CoronaVaccine>(entity =>
            {
                entity.ToTable("CoronaVaccine");

                entity.Property(e => e.CoronaVaccineId).ValueGeneratedNever();

                entity.Property(e => e.Manufacturer)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Employee>(entity =>
            {
                entity.Property(e => e.EmployeeId).HasMaxLength(9);

                entity.Property(e => e.City)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DateOfBirth).HasColumnType("datetime");

                entity.Property(e => e.FirstName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.LastName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.MobilePhone)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Number)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PositiveResultDate).HasColumnType("datetime");

                entity.Property(e => e.RecoveryDate).HasColumnType("datetime");

                entity.Property(e => e.Street)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Telephone)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<VaccineToEmployee>(entity =>
            {
                entity.HasKey(e => new { e.CoronaVaccineId, e.EmployeeId });

                entity.ToTable("VaccineToEmployee");

                entity.HasIndex(e => e.DateOfReceivingVaccine, "IX_VaccineToEmployee");

                entity.Property(e => e.EmployeeId).HasMaxLength(9);

                entity.Property(e => e.DateOfReceivingVaccine).HasColumnType("datetime");

                entity.HasOne(d => d.CoronaVaccine)
                    .WithMany(p => p.VaccineToEmployees)
                    .HasForeignKey(d => d.CoronaVaccineId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_VaccineToEmployee_CoronaVaccine");

                entity.HasOne(d => d.Employee)
                    .WithMany(p => p.VaccineToEmployees)
                    .HasForeignKey(d => d.EmployeeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_VaccineToEmployee_Employees");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}